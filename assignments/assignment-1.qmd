---
title: "Assignment 1"
format:
  html:
    code-tools: true
    code-fold: true
---

# Assignment 1

My first assignment has three parts.

## (a)

##    The speaker in this YouTube lesson goes over how to use pins in a Codenames app to generate daily codenames. 

## They describe how to use pins to send and save codename information via email, Slack bots, and Shiny apps, among other channels. 

## They recommend writing a script that generates codenames and updates the pin using R Markdown. with addition, other packages like as IDs and dplyr can be used to aid with the codename generation process. 

## Next, Katie Masiello walks through the process of using RStudio to construct the app. The user's codename, which might be based on their session name or default username, is displayed in the app's Shiny panel. Users have the option to enter a hidden alias or their own name as their codename. To filter and retrieve their private codename, users can build their own codename table in RStudio. The application will undergo local testing before being released as a CodenamesÂ generator.

**Video Link : <https://youtu.be/MQ5L3TSQVys?feature=shared>**

## (b)

**1) Performance:**

-   Python usually faster than R for computation and processing tasks.

-   R may be slower for complex computations compared to Python, especially for large datasets.

**2) Assignment Syntax:**

-   R is using "\<-" syntax.

    -   Code Example:

        -   a \<- c(1, 2, 3)

-   Python is using "=" syntax.

    -   Code Example:

        -   a = \[1, 2, 3\]

**3) Using of Vectors:**

-   R is a programming language that uses vectors and thus provides many conveniences. For example, coding errors are minimal in R. Variables are stored as vectors in R.

    -   Example:

        -   variable \<- c(2210469025, "Berkay", "Ankara")

-   In Python, lists are generally used. And we have to be very careful not to make mistakes.

    -   Example:

        -   list = \[2210469025, "Berkay", "Ankara"\]

## (c)

```{r}
#| output: false
install.packages("dslabs", repos = " https://CRAN.R-project.org/package=dslabs")
library("dslabs")
data("admissions")
edited_example <- ifelse(is.na(na_example), 0, na_example)
```

**NA Example**

```{r}
print(na_example)
```

**Edited Example**

```{r}
print(edited_example)
```
